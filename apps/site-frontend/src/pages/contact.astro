---
import { ViewTransitions } from "astro:transitions";
import { SEO } from "astro-seo";
import Footer from "../components/Footer.astro";
import Navigation from '../components/Navigation.astro';
import '../styles/contact/contact.css';
import '../styles/global.css';

const emailToken = `${import.meta.env.WEB3FORM_TOKEN}`;
const apiBaseUrl = import.meta.env.API_BASE_URL;

const data = await fetch(`${apiBaseUrl}/api/globals/socials/`).then((res) => res.json());
const dataHomepage= await fetch(`${apiBaseUrl}/api/globals/homepage/`).then((res) => res.json());


---

<html lang="en">
  <head>
    <SEO
    title="Recovery Fitness"
    titleTemplate="Contact Samuel Tseng"
    description="The contact page is where visitor get in contact with Samuel Tseng via a enquiry form or contact him via Social Media"
  />

    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} >
    <title>Contact Sam</title>
    <ViewTransitions />
  </head>
  <body>
    <Navigation/>
    <div id="contact">
      <h1>Ready to meet {dataHomepage.name}?</h1>
      <h2>Fill in the enquiry form or contact {dataHomepage.name} via Social Media</h2>
      <div id="social-icons">
        {
          data.socials?.map((social: any) => 
          social.show && (
            <a href={social.url} target="_blank">
              <img src={`${apiBaseUrl}${social.icon.url}`}/>
            </a>
          ))
        }
      </div>
      <div id="contact-form">
        <form
        action="https://api.web3forms.com/submit"
        method="POST"
        id="form"
        class="needs-validation"
        data-astro-reload
        novalidate>
        <input type="hidden" name="access_key" value={emailToken}/>

        <label for="name">Full Name<span id="required_star">*</span></label>
        <input type="text" id="name" name="name" required>

        <label for="email">Email Address<span id="required_star">*</span></label>
        <input type="email" id="email" name="email" required>

        <label for="subject">Subject<span id="required_star">*</span></label>
        <input type="text" id="subject" name="subject" required>

        <label for="message">Message<span id="required_star">*</span></label>
        <textarea id="message" name="message" required/>

        <div id="submit-area">
          <input type="submit" value="Submit">
          <div id="result"/>
        </div>
        </form>
      </div>
    </div>
    <Footer/>
  </body>
</html>

<script is:inline>

  // use astro:page-load event if you are using View Transitions

  document.addEventListener("astro:page-load", () => {
  
      const form = document.getElementById("form");
      const result = document.getElementById("result");

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        if (!form.checkValidity()) {
          form.querySelectorAll(":invalid")[0].focus();
          document.getElementById("result").style.color = "red"
          result.innerHTML = "Please fill the form in its entirety with details in the correct format!"
          return;
        }
        const formData = new FormData(form);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        result.innerHTML = "Sending...";
        document.getElementById("result").style.color = "black"

        fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        })
          .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
              result.innerHTML = json.message;
            } else {
              console.log(response);
              result.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            result.innerHTML = "Something went wrong!";
          })
          .then(function () {
            form.reset();
            form.classList.remove("was-validated");
            setTimeout(() => {
              result.style.display = "none";
            }, 10000);
          });
      });
    },
    { once: true },
  );
</script>